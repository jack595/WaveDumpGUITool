# ****************************************************************
# WaveDump Configuration File
# ****************************************************************

# NOTE:
# The lines between the commands @OFF and @ON will be skipped.
# This can be used to exclude parts of the file.

# ----------------------------------------------------------------
# Settings common to all channels
# ----------------------------------------------------------------
[COMMON]

# OPEN: open the digitizer
# options: USB 0 0      			Desktop/NIM digitizer through USB
#          USB 0 BA     			VME digitizer through USB-V1718/V3718 (BA = BaseAddress of the VME board, 32 bit hex)
#          PCI 0 0 0    			Desktop/NIM/VME through CONET (optical link)
#          PCI 0 0 BA   			VME digitizer through V2718/V3718 (BA = BaseAddress of the VME board, 32 bit hex)
#          USB_A4818 X 0 0			Desktop/NIM digitizer through USB->A4818->CONET (X is the PID (product id) of A4818)
#          USB_A4818_V2718 X 0 BA   VME digitizer through USB-A4818-V2718 (BA = BaseAddress of the VME board, 32 bit hex) (X is the PID (product id) of A4818)
#          USB_A4818_V3718 X 0 BA   VME digitizer through USB-A4818-V3718 (BA = BaseAddress of the VME board, 32 bit hex) (X is the PID (product id) of A4818)
#          USB_A4818_V4718 X 0 BA   VME digitizer through USB-A4818-V4718 (BA = BaseAddress of the VME board, 32 bit hex) (X is the PID (product id) of A4818)
#		   ETH_V4718 IP 0 BA		VME digitizer through ETH-V4718 (BA = BaseAddress of the VME board, 32 bit hex) (IP is the IP Address of the V4718)
#	       USB_V4718 X 0 BA			VME digitizer through USB-V4718 (BA = BaseAddress of the VME board, 32 bit hex) (X is the PID (product id) of V4718)

OPEN USB 0 0
#OPEN ETH_V4718 192.168.0.253 0 32100000
#OPEN USB_V4718 12345 0 32100000
#OPEN USB_A4818 12345 0 0
#OPEN USB_A4818_V2718 12345 0 32100000
#OPEN USB 0 32100000
#OPEN PCI 0 0 0
#OPEN PCI 0 0 32100000

# RECORD_LENGTH = number of samples in the acquisition window
RECORD_LENGTH  {RecordLength}

# DECIMATION_FACTOR: ONLY FOR 740 and 724 MODELS. change the decimation factor for the acquisition.
# options: 1 2 4 8 16 32 64 128
DECIMATION_FACTOR  {DecimationFactor}

# POST_TRIGGER: post trigger size in percent of the whole acquisition window
# options: 0 to 100
# On models 742 there is a delay of about 35nsec on signal Fast Trigger TR; the post trigger is added to
# this delay
POST_TRIGGER  {PostTrigger}

#PULSE_POLARITY: input signal polarity.
#options: POSITIVE, NEGATIVE
#
PULSE_POLARITY  {PulsePolarity}

# EXTERNAL_TRIGGER: external trigger input settings. When enabled, the ext. trg. can be either
# propagated (ACQUISITION_AND_TRGOUT) or not (ACQUISITION_ONLY) through the TRGOUT
# options: DISABLED, ACQUISITION_ONLY, ACQUISITION_AND_TRGOUT
EXTERNAL_TRIGGER   {ExternalTrigger}

# FPIO_LEVEL: type of the front panel I/O LEMO connectors
# options: NIM, TTL
FPIO_LEVEL  {FPIO_Level}

# OUTPUT_FILE_FORMAT: output file can be either ASCII (column of decimal numbers) or binary
# (2 bytes per sample, except for Mod 721 and Mod 731 that is 1 byte per sample)
# options: BINARY, ASCII
OUTPUT_FILE_FORMAT   {OutputFileFormat}

# OUTPUT_FILE_HEADER: if enabled, the header is included in the output file data
# options: YES, NO
OUTPUT_FILE_HEADER  {OuputFileHeader}

# TEST_PATTERN: if enabled, data from ADC are replaced by test pattern (triangular wave)
# options: YES, NO
TEST_PATTERN   {TestPattern}

# WRITE_REGISTER: generic write register access. This command allows the user to have a direct write access
# to the registers of the board. NOTE: all the direct write accesses are executed AFTER the other settings,
# thus it might happen that the direct write overwrites a specific setting.
# To avoid this use the right "MASK".
# Syntax: WRITE_REGISTER ADDRESS DATA MASK, where ADDRESS is the address offset of the register (16 bit hex), DATA
# is the value being written (32 bit hex) and MASK is the bitmask to be used for DATA masking.
# Example: Set only bit [8] of register 1080 to 1, leaving the other bits to their previous value
# WRITE_REGISTER 1080 0100 0100
# Example: Set only bit [8] of register 1080 to 0, leaving the other bits to their previous value
# WRITE_REGISTER 1080 0000 0100
# Example: Set register 1080 to the value of 0x45:
# WRITE_REGISTER 1080 45 FFFFFFFF

# ----------------------------------------------------------------
# Individual Settings
# ----------------------------------------------------------------
# The following setting are usually applied on channel by channel
# basis; however, you can put them also here in the [COMMON] section in
# order to apply them to all the channels.
# ----------------------------------------------------------------

# ENABLE_INPUT: enable/disable one channel
# options: YES, NO
ENABLE_INPUT          NO

#BASELINE_LEVEL: baseline position in percent of the Full Scale.
# POSITIVE PULSE POLARITY (Full Scale = from 0 to + Vpp)
# 0: analog input dynamic range = from 0 to +Vpp
# 50: analog input dynamic range = from +Vpp/2 to +Vpp
# 100: analog input dynamic range = null (usually not used)*
# NEGATIVE PULSE POLARITY (Full Scale = from -Vpp to 0)
# 0: analog input dynamic range = from -Vpp to 0
# 50: analog input dynamic range = from -Vpp/2 to 0
# 100: analog input dynamic range = null (usually not used)*
#
# options: 0 to 100
BASELINE_LEVEL  {GlobalBaselineLevel}

# TRIGGER_THRESHOLD: threshold for the channel auto trigger (ADC counts)
# options 0 to 2^N-1 (N=Number of bit of the ADC)
# *The threshold is relative to the baseline:
# 	POSITIVE PULSE POLARITY: threshold = baseline + TRIGGER_THRESHOLD
# 	NEGATIVE PULSE POLARITY: threshold = baseline - TRIGGER_THRESHOLD
#
TRIGGER_THRESHOLD      {GlobalThreshold}

# CHANNEL_TRIGGER: channel auto trigger settings. When enabled, the ch. auto trg. can be either
# propagated (ACQUISITION_AND_TRGOUT) or not (ACQUISITION_ONLY) through the TRGOUT
# options: DISABLED, ACQUISITION_ONLY, ACQUISITION_AND_TRGOUT, TRGOUT_ONLY
# NOTE: since in x730 boards even and odd channels are paired, their 'CHANNEL_TRIGGER' value
# will be equal to the OR combination of the pair, unless one of the two channels of
# the pair is set to 'DISABLED'. If so, the other one behaves as usual.
CHANNEL_TRIGGER      {Channel_Trigger}

#In the following, you can see the use of some individual settings to:
#	-enable channel [0]
#	-position the baseline to 10% of the full scale, to use the input dynamic range in a better way
#	-set the trigger threshold of channel [0] to 50 LSB (relative to the baseline position)
#

[0]
{CH0_Settings}

[1]
{CH1_Settings}

[2]
{CH2_Settings}

[3]
{CH3_Settings}
